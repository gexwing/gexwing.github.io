<!DOCTYPE html>
<html>
<head>
  <title>Fretboard Chord Visualizer</title>
  <script type="text/javascript" src="music-data.js"></script>
  <script type="text/javascript" src="cFretboard.js"></script>
  <script type="text/javascript" src="cKeyboard.js"></script>
  <script type="text/javascript">

    function populateFormElements() {
      let params = new URLSearchParams(window.location.search.slice(1));

      function popHelper(selectid, dataarray)
      {
        let select = document.getElementById(selectid);
        dataarray.forEach(option => {
          let optionelement = document.createElement('option');
          optionelement.value = option;
          optionelement.innerHTML = option;
          if (params.get(selectid) == option) { optionelement.selected = true; }
          select.appendChild(optionelement);
        });
      };

      popHelper("tuning", Object.keys(tunings));

      popHelper("key", notesNames);
      popHelper("scale", Object.keys(scales));

      popHelper("rootnote", notesNames);
      popHelper("chord", Object.keys(chords_basic));
      popHelper("chord", Object.keys(chords_sus));
      popHelper("chord", Object.keys(chords_7th));
      popHelper("chord", Object.keys(chords_extended));

      for (const rb of document.querySelectorAll('input[name="drawSelect"]')) {
          if (params.get("drawSelect") == rb.value) { rb.checked = true; }
      };
      for (const rb of document.querySelectorAll('input[name="drawNote"]')) {
          if (params.get("drawNote") == rb.value) { rb.checked = true; }
      };
    };
  
    function prepare()
    {
      populateFormElements();
      quickchordsUpdate();
      update();
    }

    Array.prototype.rotate = function(n) {
      n = n % this.length;
      return this.slice(n, this.length).concat(this.slice(0, n));
    }

    function update()
    {
      let strings = tunings[document.getElementById("tuning").value];

      let key = document.getElementById("key").selectedIndex;
      let scalenotes = scales[document.getElementById("scale").value].map(note => (note + key) % 12);
      document.getElementById('ScaleNoteNames').value = scalenotes.map(i => notesNames[i]);

      let root = document.getElementById("rootnote").selectedIndex;
      let chordnotes = chords_all[document.getElementById("chord").value].map(note => (note + root) % 12);
      document.getElementById('ChordNoteNames').value = chordnotes.map(i => notesNames[i]);

      let notes = document.getElementById('drawSelectScale').checked ? scalenotes : chordnotes;
      let names = document.getElementById('drawNoteName').checked ? notesNames : intervalNames.rotate(12 - key);
      // TODO: note names in scale not correct as per naming rules

      cFretDraw(document.getElementById('cFretboard'), strings, notes, names);
      cKeyDraw(document.getElementById('cKeyboard'), notes, names);
    }

    function quickchordsUpdate()
    {
      let keyoffset = document.getElementById("key").selectedIndex;
      let notes = scales[document.getElementById("scale").value];

      function popHelper(optionid, chordarray)
      {
        let element = document.getElementById(optionid);
        element.innerText = null;
        for ([root, cname] of findChords(chordarray, notes.map(note => (note + keyoffset) % 12)))
        {
          let option = document.createElement("option");
          option.innerHTML = notesNames[root] + cname;
          option.dataset.root = root;
          option.dataset.cname = cname;
          element.appendChild(option);
        }
      };

      popHelper('quickchords_basic', chords_basic);
      popHelper('quickchords_sus', chords_sus);
      popHelper('quickchords_7th', chords_7th);
      popHelper('quickchords_extended', chords_extended);
    }
  
    function quickchordSelected(obj)
    {
      let opt_root = document.querySelector('select#rootnote [value="' + notesNames[obj.options[obj.selectedIndex].dataset.root] + '"]');
      let opt_cname = document.querySelector('select#chord [value="' + obj.options[obj.selectedIndex].dataset.cname + '"]');

      if ((opt_root) && (opt_cname))
      {
        opt_root.selected = true;
        opt_cname.selected = true;
        update();
      }
    }

  </script>
  
  <style type="text/css">
    body {
      font-family: Arial, Helvetica, sans-serif;
      font-size: smaller;
    }

    button, input, select, textarea {
      font-family: inherit;
      font-size: inherit;
    }

    form#ChordForm {
      float: left;
      width: 200px;
    }

    form#ChordForm div {
      display: flex;
    }
  
    form#ChordForm div select:last-child,
    form#ChordForm div input:last-child
    {
      flex-grow: 1;
    }

    form#ChordForm input[type=text]
    {
      width: 75%;
    }

    canvas {
      float:none;
      margin-left: 50px;
    }
  </style>

</head>

<body onload="prepare();">
  <form id="ChordForm" method="get" onchange="update();">
    <h3>Scale Select</h3>
    <div>
      <select name="key" id="key" onchange="quickchordsUpdate();"></select>
      <select name="scale" id="scale" onchange="quickchordsUpdate();"></select>
    </div>
    <div>
      <input type="text" id="ScaleNoteNames" disabled>
    </div>
    <div>
      <select id="quickchords" size=8 onchange="quickchordSelected(this);";>
        <optgroup id="quickchords_basic" label="Basic Chords"></optgroup>
        <optgroup id="quickchords_sus" label="Sus Chords"></optgroup>
        <optgroup id="quickchords_7th" label="7th Chords"></optgroup>
        <optgroup id="quickchords_extended" label="Extended Chords"></optgroup>
      </select>
    </div>


    <h3>Chord Select</h3>
    <div>
      <select name="rootnote" id="rootnote"></select>
      <select name="chord" id="chord"></select>
    </div>
    <div>
      <input type="text" id="ChordNoteNames" disabled>
    </div>

    <h3>Drawing Options</h3>
    <div>
      <select name="tuning" id="tuning"></select>
    </div>
    <div>
      <div style="width: 50%;">
        <input type="radio" id="drawSelectScale" name="drawSelect" value="scale" checked>
        <label for="drawSelectScale">Scale</label>
      </div>
      <div>
        <input type="radio" id="drawSelectChord" name="drawSelect" value="chord">
        <label for="drawSelectChord">Chord </label>
      </div>
    </div>
    <div>
      <div style="width: 50%;">
        <input type="radio" id="drawNoteName" name="drawNote" value="name" checked>
        <label for="drawNoteName">Note</label>
      </div>
      <div>
        <input type="radio" id="drawNoteInterval" name="drawNote" value="interval">
        <label for="drawNoteInterval">Interval</label>
      </div>
    </div>
    <br />
    <div>
      <button>Generate URL</button>
    </div>
  </form>
  <br />
  <div style="float: left;">
    <canvas id="cFretboard"></canvas><br />
    <canvas id="cKeyboard"></canvas>
</div>
</body>
</html>
