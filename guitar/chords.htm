<!DOCTYPE html>
<html>
<head>
  <title>Fretboard Chord Visualizer</title>
  <script type="text/javascript" src="music-data.js"></script>
  <script type="text/javascript" src="cFretboard.js"></script>
  <script type="text/javascript">

    function populateFormElements() {
      let params = new URLSearchParams(window.location.search.slice(1));

      function popHelper(selectid, dataarray)
      {
        let select = document.getElementById(selectid);
        dataarray.forEach(option => {
          let optionelement = document.createElement('option');
          optionelement.value = option;
          optionelement.innerHTML = option;
          if (params.get(selectid) == option) { optionelement.selected = true; }
          select.appendChild(optionelement);
        });
      };

      popHelper("tuning", Object.keys(tunings));

      popHelper("key", notesNames);
      popHelper("scale", Object.keys(scales));

      popHelper("rootnote", notesNames);
      popHelper("chord", Object.keys(chords_basic));
      popHelper("chord", Object.keys(chords_sus));
      popHelper("chord", Object.keys(chords_7th));

      for (const rb of document.querySelectorAll('input[name="drawSelect"]')) {
          console.log(rb);
          if (params.get("drawSelect") == rb.value) { rb.checked = true; }
      };
    };
  
    function prepare()
    {
      populateFormElements();
      quickchordsUpdate();
      update();
    }

    function update()
    {
      let canvas = document.getElementById('cFretboard');
      let strings = tunings[document.getElementById("tuning").value];
      let notes = [];

      if (document.getElementById('drawSelectScale').checked)
      {
        let key = document.getElementById("key").selectedIndex;
        notes = scales[document.getElementById("scale").value].map(
          note => (note + key) % 12
        );
      }
      else if (document.getElementById('drawSelectChord').checked == true)
      {
        let root = document.getElementById("rootnote").selectedIndex;
        notes = chords_all[document.getElementById("chord").value].map(
          note => (note + root) % 12
        );
      }

      cFretDraw(canvas, strings, notes);
    }

    function quickchordsUpdate()
    {
      let keyoffset = document.getElementById("key").selectedIndex;
      let notes = scales[document.getElementById("scale").value];

      document.getElementById('quickchords_basic').innerText = null;
      document.getElementById('quickchords_sus').innerText = null;
      document.getElementById('quickchords_7th').innerText = null;

      for ([root, cname] of findChords(chords_basic, notes.map(note => (note + keyoffset) % 12)))
      {
        let option = document.createElement("option");
        option.innerHTML = notesNames[root] + cname;
        option.dataset.root = root;
        option.dataset.cname = cname;
        document.getElementById("quickchords_basic").appendChild(option);
      }
      for ([root, cname] of findChords(chords_sus, notes.map(note => (note + keyoffset) % 12)))
      {
        let option = document.createElement("option");
        option.innerHTML = notesNames[root] + cname;
        option.dataset.root = root;
        option.dataset.cname = cname;
        document.getElementById("quickchords_sus").appendChild(option);
      }
      for ([root, cname] of findChords(chords_7th, notes.map(note => (note + keyoffset) % 12)))
      {
        let option = document.createElement("option");
        option.innerHTML = notesNames[root] + cname;
        option.dataset.root = root;
        option.dataset.cname = cname;
        document.getElementById("quickchords_7th").appendChild(option);
      }
    }
  
    function quickchordSelected(obj)
    {
      let opt_root = document.querySelector('select#rootnote [value="' + notesNames[obj.options[obj.selectedIndex].dataset.root] + '"]');
      let opt_cname = document.querySelector('select#chord [value="' + obj.options[obj.selectedIndex].dataset.cname + '"]');

      if ((opt_root) && (opt_cname))
      {
        opt_root.selected = true;
        opt_cname.selected = true;
        update();
      }
    }

  </script>
  
  <style type="text/css">
    body {
      font-family: Arial, Helvetica, sans-serif;
      font-size: smaller;
    }

    button, input, select, textarea {
      font-family: inherit;
      font-size: inherit;
    }

    form#ChordForm {
      float: left;
      width: 200px;
    }

    form#ChordForm div { display: flex; }
    form#ChordForm div select:last-child { flex-grow: 1; }
    canvas#cFretboard { float:left; margin-left: 50px; }
    form#ChordForm input[type=text] { width: 75%; }
  </style>

</head>

<body onload="prepare();">
  <form id="ChordForm" method="get" onchange="update();">
    <h3>Scale Select</h3>
    <div>
      <select name="key" id="key" onchange="quickchordsUpdate();"></select>
      <select name="scale" id="scale" onchange="quickchordsUpdate();"></select>
    </div>
    <div>
      <select id="quickchords" size=8 onchange="quickchordSelected(this);";>
        <!-- <option></option> -->
        <optgroup id="quickchords_basic" label="Basic Chords"></optgroup>
        <optgroup id="quickchords_sus" label="Sus Chords"></optgroup>
        <optgroup id="quickchords_7th" label="7th Chords"></optgroup>
      </select>
    </div>

    <h3>Chord Select</h3>
    <div>
      <select name="rootnote" id="rootnote"></select>
      <select name="chord" id="chord"></select>
    </div>

    <h3>Drawing Options</h3>
    <div>
      <select name="tuning" id="tuning"></select>
    </div>
    <br />
    <div>
      <div style="width: 50%;">
        <input type="radio" id="drawSelectScale" name="drawSelect" value="scale">
        <label for="drawSelectScale">Scale</label>
      </div>
      <div>
        <input type="radio" id="drawSelectChord" name="drawSelect" value="chord">
        <label for="drawSelectChord">Chord </label>
      </div>
    </div>
    <br />
    <div>
      <button>Generate URL</button>
    </div>
  </form>
  <br />
  <canvas id="cFretboard"></canvas>
</body>
</html>
